<?php
/**
 * @file
 * Heisencache installer: define the SQL Writer schema
 *
 * @author: Frederic G. MARAND <fgm@osinet.fr>
 *
 * @copyright (c) 2013-2014 Ouest SystÃ¨mes Informatiques (OSInet).
 *
 * @license General Public License version 2 or later
 */

use OSInet\Heisencache\SqlWriterSubscriber;
use OSInet\Heisencache\CacheReadLogWriterSubscriber;

require_once __DIR__ . '/class_loader.inc';

/**
 * Implements hook_schema().
 */
function heisencache_schema() {
  $ret = array();

  $ret[SqlWriterSubscriber::SINK] = array(
    'description' => 'Stores raw Heisencache events par page cycle, not meant for direct consumption.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The page cycle id",
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'text',
        // On MySQL, medium text only holds up to 16 MB.
        // Some configurations may write more than this.
        'size' => 'big',
        'not null' => TRUE,
        'description' => 'The event data in bulk, as observed by subscribers',
      ),
    ),
    'primary key' => array('id'),
  );

  $ret[CacheReadLogWriterSubscriber::DB_TABLE] = array(
    'description' => 'Contains cache_get() usage statistics.',
    'fields' => array(
      'channel' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The channel (cache bin).',
      ),
      'cache_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The cache ID.',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The timestamp of the last cache_get() call.',
      ),
    ),
    'primary key' => array('channel', 'cache_id'),
    'indexes' => array(
      'channel' => array('channel'),
      'timestamp' => array('timestamp'),
    ),
  );

  return $ret;
}
